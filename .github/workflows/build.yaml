name: "🏗️ vgv_challenge Build"

concurrency:
  group: vgv_challenge
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    tags:
      - v*
    branches:
      - "releases/**"

jobs:
  semantic-push:
    name: "📝 Conventional Commit Check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v6

  spell-check:
    name: "📝 Spell Check"
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    with:
      includes: "**/*.md"
      modified_files_only: true

  analyze:
    name: "🔍 Analyze Code"
    runs-on: ubuntu-latest
    needs: [spell-check, semantic-push]
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4
      - name: "🔍 Run Analysis"
        uses: ./.github/actions/analyze

  test:
    name: "🧪 Run Tests"
    runs-on: ubuntu-latest
    needs: [spell-check, semantic-push]
    permissions:
      contents: write
      checks: write
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4
      - name: "🧪 Execute Tests"
        uses: ./.github/actions/test
        with:
          test-locations: "."

  build-apk:
    name: "📱 Build & Upload APK"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [analyze, test]
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4
      - name: "📱 Build & Upload APK"
        uses: ./.github/actions/apk
        with:
          build-type: "release"
          build-target: "main_production.dart"
          build-flavor: "production"
          keystore-path: "android/app/prod-release.jks"
          keystore-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          key-alias: "prod-release"
          key-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keystore-base64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
